@model MVC_Asset.Models.AssetDetails
@{
    ViewBag.Title = "Edit";
}



<div class="form-body">
    @using (Html.BeginForm("Edit", "AssetDetail", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        var path = " ";
        var imgsrc = "";
        @Html.HiddenFor(model => model.AssetEntryID)
        <div class="form-group">
            @Html.LabelFor(model => model.AssetId)
            @Html.TextBoxFor(model => model.AssetId, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.AssetId)
        </div>

        <div class="form-group">
            @*<h3 style="color:white"><b>AssetType:</b></h3>*@
            @Html.LabelFor(model => model.AssetType)
            <br>
            <label>
                @Html.DropDownListFor(model => model.AssetType, ViewBag.Message as SelectList, "--Select the AssetType--", new { @class = "form-control", @readonly = "readonly" })
            </label>

            @Html.ValidationMessageFor(model => model.AssetId)
        </div>


        <div class="form-group">

            @Html.LabelFor(model => model.AssetNo)
            @Html.TextBoxFor(model => model.AssetNo, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.AssetNo)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssetDescription)
            @Html.EditorFor(model => model.AssetDescription)
            @Html.ValidationMessageFor(model => model.AssetDescription)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseDate)
            @*@Html.TextBoxFor(model => model.PurchaseDate, new {value = Model.PurchaseDate.Value.ToShortDateString(), type = "date" })*@
            @Html.EditorFor(model => model.PurchaseDate)
            @Html.ValidationMessageFor(model => model.PurchaseDate)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WarrantyStartDate)
            @Html.EditorFor(model => model.WarrantyStartDate)
            @Html.ValidationMessageFor(model => model.WarrantyStartDate)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WarrantyEndDate)
            @Html.EditorFor(model => model.WarrantyEndDate)
            @Html.ValidationMessageFor(model => model.WarrantyEndDate)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Serial_No)
            @Html.EditorFor(model => model.Serial_No)
            @Html.ValidationMessageFor(model => model.Serial_No)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remarks)
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Isdeleted)
            <br />
            @if (Model.Isdeleted == "Yes")
            {
                <div style="display:flex">

                    <input type="radio" id="yes" name="Isdeleted" value="Yes" checked />
                    <label for="yes" style="font-size: large; padding: 10px 1em 0px 8px;"> Yes</label>
                    <input type="radio" id="no" name="Isdeleted" value="No" disabled />
                    <label for="no" class="block" style="font-size: large; padding: 10px 1em 0px 8px;">No</label>

                </div>
            }
            else
            {
                <div style="display:flex">

                    <input type="radio" id="yes" name="Isdeleted" value="Yes" disabled />
                    <label for="yes" style="font-size: large; padding: 10px 1em 0px 8px;"> Yes</label>
                    <input type="radio" id="no" name="Isdeleted" value="No" checked />
                    <label for="no" class="block" style="font-size:large; padding: 10px 1em 0px 8px;">No</label>

                </div>
            }

            @Html.ValidationMessageFor(model => model.Isdeleted)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Attachment)
        </div>
        if (Model.Attachment != null)
        {
            path = (Model.ImagePath);
            string fileName = Path.GetFileNameWithoutExtension(path);
            string extension = Path.GetExtension(path);
            path = fileName + extension;
        }
        else
        {
            path = "";
        }
        if (Model.Attachment != null)
        {
            //var base64 = Convert.ToBase64String(item.Attachment);
            imgsrc = @Url.Content(Model.Attachment);
            //var stringbyte = BitConverter.ToString(item.Attachment);

        }
        else
        {
            imgsrc = null;
        }
        <div>
            <img src="@imgsrc" width="80" height="80" />
            <h4 style="color:white">Select file to upload:</h4>
            <input type="file" id="img" name="Attach" />
        </div>

        <br>
        <div class="form-group">
            <input type="submit" value="Submit" class="btn button" />
            <input type="reset" value="Reset" class="btn button" />
        </div>
    }
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
}

